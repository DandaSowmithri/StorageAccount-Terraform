# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.

# Add steps that build, run tests, deploy, and more:

# https://aka.ms/yaml



trigger:

- main



pool:

  vmImage: ubuntu-latest



steps:

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0

  displayName: 'Use Terraform latest'

  inputs:

   terraformVersion: latest



-  task: TerraformTaskV1@0

   inputs:

    provider: 'azurerm'

    command: 'init'

    workingDirectory: 'StorageAccount-Terraform'

    backendServiceArm: 'Terraform-saw'

    backendAzureRmResourceGroupName: 'sowmithri-rg'

    backendAzureRmStorageAccountName: 'storemfwttwheqnyuk'

    backendAzureRmContainerName: 'testcontainer1'

    backendAzureRmKey: 'tf/terraform.tfstate'

    providerAzureRmSubscriptionId: 'LTTS_DevOps (488407a5-b2e4-4437-a2df-ae3d974d0375)'

  



- task: TerraformTaskV1@0

  inputs:

    provider: 'azurerm'

    command: 'apply'

    workingDirectory: 'StorageAccount-Terraform'

    environmentServiceNameAzureRM: 'Terraform-saw'

    providerAzureRmSubscriptionId: 'LTTS_DevOps (488407a5-b2e4-4437-a2df-ae3d974d0375)'