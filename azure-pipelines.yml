# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: charleszipp.azure-pipelines-tasks-terraform@0
  displayName: 'Install Terraform 0.7.8'
  inputs:
    terraformVersion: 0.7.8
- task: TerraformTaskV1@0
  displayName: 'Terraform : init'
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform/terraform'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform/terraform'
    backendServiceArm: 'Terraform-saw'
    backendAzureRmResourceGroupName: 'sowmithri-rg'
    backendAzureRmStorageAccountName: 'storemfwttwheqnyuk'
    backendAzureRmContainerName: 'testcontainer1'
    backendAzureRmKey: 'tf/terraform.tfstate'
    providerAzureRmSubscriptionId: 'LTTS_DevOps (488407a5-b2e4-4437-a2df-ae3d974d0375)'
  

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform/terraform'
    environmentServiceNameAzureRM: 'Terraform-saw'
    providerAzureRmSubscriptionId: 'LTTS_DevOps (488407a5-b2e4-4437-a2df-ae3d974d0375)'
