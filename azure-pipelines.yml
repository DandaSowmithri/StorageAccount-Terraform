# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.

# Add steps that build, run tests, deploy, and more:

# https://aka.ms/yaml



trigger:

- main



pool:

  vmImage: ubuntu-latest



steps:

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0

  displayName: 'use terraform latest'

  inputs:

   terraformVersion: latest



- task: TerraformTaskV1@0

  inputs:

    provider: 'azurerm'
    
    TerraformFilePath: '/opt/hostedtoolcache/terraform/1.2.3/x64/terraform'

    command: 'init'

    backendServiceArm: 'sowmithri-spn'

    backendAzureRmResourceGroupName: 'sowmithri-rg-tf'

    backendAzureRmStorageAccountName: 'store123'

    backendAzureRmContainerName: 'testcontainer123'

    backendAzureRmKey: 'tf/terraform.tfstate'
    
    backendAzureRmClientId: '15c95910-c46a-4916-8de5-0b8c5a955276'
    
    backendAzureRmTenantId: 'b4f83e87-1a6d-49f0-ac62-8dbff9df851e'
    
    backendAzureRmSecretKey: 'fI68Q~-f1.XK-ZKM07d3_Ur8MBHgwh4_oAZuodkJ'

    providerAzureRmSubscriptionId: 'Pay-As-You-Go (841f641a-e7a5-4f1f-93a8-f768f9d0640f)'

  



- task: TerraformTaskV1@0

  inputs:

    provider: 'azurerm'

    command: 'apply'

    workingDirectory: 'StorageAccount-terraform'

    environmentServiceNameAzureRM: 'sowmithri-spn'

    providerAzureRmSubscriptionId: 'Pay-As-You-Go (841f641a-e7a5-4f1f-93a8-f768f9d0640f)'
    
    backendAzureRmClientId: '15c95910-c46a-4916-8de5-0b8c5a955276'
    
    backendAzureRmTenantId: 'b4f83e87-1a6d-49f0-ac62-8dbff9df851e'
    
    backendAzureRmSecretKey: 'fI68Q~-f1.XK-ZKM07d3_Ur8MBHgwh4_oAZuodkJ'
    