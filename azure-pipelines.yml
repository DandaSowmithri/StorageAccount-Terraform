# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.

# Add steps that build, run tests, deploy, and more:

# https://aka.ms/yaml



trigger:

- main



pool:

  vmImage: ubuntu-latest



steps:

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0

  displayName: 'Use Terraform latest'

  inputs:

   terraformVersion: latest

- task: FileTransform@1
  
  inputs:
    
   folderPath: '$(System.DefaultWorkingDirectory)/**/*.terraform'



-  task: TerraformTaskV1@0

   inputs:

    provider: 'azurerm'

    command: 'init'

    workingDirectory: 'StorageAccount-Terraform'

    backendServiceArm: 'terraform-spn'

    backendAzureRmResourceGroupName: 'sowmithri-rg-tf'

    backendAzureRmStorageAccountName: 'store123'

    backendAzureRmContainerName: 'testcontainer123'

    backendAzureRmKey: 'tf/terraform.tfstate'

    providerAzureRmSubscriptionId: 'Pay-As-You-Go (841f641a-e7a5-4f1f-93a8-f768f9d0640f)'

  



- task: TerraformTaskV1@0

  inputs:

    provider: 'azurerm'

    command: 'apply'

    workingDirectory: 'StorageAccount-Terraform'

    environmentServiceNameAzureRM: 'terraform-spn'

    providerAzureRmSubscriptionId: 'Pay-As-You-Go (841f641a-e7a5-4f1f-93a8-f768f9d0640f)'